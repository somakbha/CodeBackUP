package org.somak.messenger.resources;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import org.somak.messenger.model.Message;
import org.somak.messenger.service.MessageService;

@Path("/messages")
public class MessageResource {

	MessageService msgService = new MessageService();

	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public List<Message> getAllMessages(@QueryParam("year") int year,
			 @QueryParam("start") int start,
			 @QueryParam("size") int size) {
		
		if (year!=0)
		{
			return msgService.getAllMessagesForYear(year);
		}
		
		if (size!=0) {
			return msgService.getAllMessagesPaginated(start, size);
		}
		return msgService.getAllMessages();
	}

	@GET
	@Produces(MediaType.APPLICATION_JSON)
	@Path("/{msgId}")
	public Message getMessages(@PathParam("msgId") long messageId) {
		return msgService.getMessage(messageId);
	}

	@POST
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Message addMessage(Message msg) {
		return msgService.addMessage(msg);
	}

	@PUT
	@Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	@Path("/{msgId}")
	public Message updateMessage(@PathParam("msgId") long messageId, Message msg) {
		msg.setId(messageId);
		return msgService.updateMessage(msg);
	}

	@DELETE
	@Produces(MediaType.APPLICATION_JSON)
	@Path("/{msgId}")
	public void deleteMessage(@PathParam("msgId") long messageId) {

		msgService.deleteMessage(messageId);
	}

}
