package org.somak.rest;

import java.lang.annotation.Annotation;
import java.lang.reflect.Type;
import java.util.Calendar;

import javax.ws.rs.ext.ParamConverter;
import javax.ws.rs.ext.ParamConverterProvider;

public class MyDateConverterProvider implements ParamConverterProvider{

	@Override
	public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType, Annotation[] arg2) {
		if (rawType.getName().equals(MyDate.class.getName()))
		{
			return new ParamConverter<T>() {

				@Override
				public T fromString(String value) {
					Calendar requestDate=Calendar.getInstance();
					
					if ("tomorrow".equals(value)) {
						requestDate.add(Calendar.DATE, 1);
					}
					
					else if ("yesterday".equals(value)) {
						requestDate.add(Calendar.DATE, -1);
					}
					MyDate myDate=new MyDate();
					myDate.setDate(requestDate.get(Calendar.DATE));
					myDate.setMonth(requestDate.get(Calendar.MONTH));
					myDate.setYear(requestDate.get(Calendar.DATE));
				}

				@Override
				public String toString(T arg0) {
					// TODO Auto-generated method stub
					return null;
				}
				
			};
			
		}
			
		return null;
	}

}
